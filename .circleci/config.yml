
# https://discuss.circleci.com/t/branch-filtering-ignore/24301
# https://circleci.com/docs/2.0/workflows/#nightly-example
# https://circleci.com/docs/2.0/workflows/
# https://support.circleci.com/hc/en-us/articles/360043638052-Conditional-steps-in-jobs-and-conditional-workflows
# https://discuss.circleci.com/t/advanced-logic-in-config/36011
# https://circleci.com/docs/2.0/pipeline-variables/
# https://circleci.com/docs/2.0/configuration-cookbook/#using-logic-in-configuration


# A build may happen if and as the 'regular' cron schedule specifies, or as the 'Trigger Pipeline' button is used with the 'action' parameter set to 'build' .

# "$CIRCLE_WORKING_DIRECTORY"


version: 2.1

parameters:
  action:
    type: enum
    enum: [build, nothing]
    default: nothing

jobs:
  build_lts:
    machine:
      image: ubuntu-2004:current
    resource_class: large
    steps:
      - checkout
      - run:
          name: write! secrets
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            echo "$rclone_limited_conf_base64" | base64 -d | sudo -n tee /rclone.conf > /dev/null
          when: on_success
      - run:
          name: _getMinimal_cloud
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _getMinimal_cloud
          when: on_success
      - run:
          name: _build_cloud_lts
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _build_cloud_prepare
            ./ubiquitous_bash.sh _build_cloud_lts
          when: on_success
      - run:
          name: _export_cloud_lts
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _export_cloud_lts
          when: on_success
      - run:
          name: _upload_cloud_lts
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _upload_cloud_lts
          when: on_success
  build_mainline:
    machine:
      image: ubuntu-2004:current
    resource_class: large
    steps:
      - checkout
      - run:
          name: write! secrets
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            echo "$rclone_limited_conf_base64" | base64 -d | sudo -n tee /rclone.conf > /dev/null
          when: on_success
      - run:
          name: _getMinimal_cloud
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _getMinimal_cloud
          when: on_success
      - run:
          name: _build_cloud_mainline
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _build_cloud_prepare
            ./ubiquitous_bash.sh _build_cloud_mainline
          when: on_success
      - run:
          name: _export_cloud_mainline
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _export_cloud_mainline
          when: on_success
      - run:
          name: _upload_cloud_mainline
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            ./ubiquitous_bash.sh _upload_cloud_mainline
          when: on_success


  nothing:
    machine:
      image: ubuntu-2004:current
    resource_class: medium
    steps:
      - checkout
      - run:
          name: _messagePlain_good nothing
          shell: /bin/bash -o pipefail
          command: |
            #set +e
            echo "$rclone_limited_conf_base64" | base64 -d | sudo -n tee /rclone.conf > /dev/null
            ./ubiquitous_bash.sh _setupUbiquitous
            ./ubiquitous_bash.sh _messagePlain_good 'good: nothing'
          when: on_success





workflows:
  build:
    when:
      equal: [ build, << pipeline.parameters.action >> ]
    jobs:
      - build_lts
      - build_mainline

  nothing:
    when:
      equal: [ nothing, << pipeline.parameters.action >> ]
    jobs:
      - nothing

  regular:
    triggers:
      - schedule:
          #cron: '5 1 * * 6,2,4'
          cron: '5 1 * * 6'
          filters:
            branches:
              only:
                - main
    jobs:
      - nothing


















